plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'challenge.pragma'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// Annotations
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.6.3'

	implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.6.3'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.5'

	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.4.3'
	implementation 'com.h2database:h2'

	// Developer
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Database
	runtimeOnly 'org.postgresql:postgresql'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def jacocoExclude = [
		'**/dto/.*',
		'**/spi/.*',
		'**/api/.*',
		'**/mappers/.*',
		'**/repository/.*',
		'**/*.test',
		'**/generated/.*',
		"**/model/**/.*",
		"**/application/**/.*",
		"**/infrastructure/**/.*",
]

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.12"
}


jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: jacocoExclude)
		}))
	}
}
